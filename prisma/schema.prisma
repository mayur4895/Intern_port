// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
 id          String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

 enum UserType{ 
  STUDENT
  EMPLOYER
  ADMIN
 }

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  phone         String?  @unique
  isphoneVerified  Boolean @default(false)
  designation String?
  password     String?
  role UserType @default(STUDENT)
  isTwoFactorEnabled  Boolean @default(false)
  twoFactorConfirmation   TwoFactorConfirmation?
  accounts      Account[]
  compnayDetails CompnayDetails[]
 }

 

 model VerificationToken{
  
    id          String @id @default(auto()) @map("_id") @db.ObjectId
  email         String?   @unique
  token  String @unique
  expires DateTime?


  @@unique([email,token])
 }

 model PasswordResetToken{
  
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  email         String?   @unique
  token  String @unique
  expires DateTime?


  @@unique([email,token])

 }
 
model PhoneVerificationOtp{
  
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  phone         String?   @unique
  otp  String @unique
  expires DateTime? 
  @@unique([phone,otp])

 }
 model TwoFactorToken{
  
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  email         String?   @unique
  token  String @unique
  expires DateTime?


  @@unique([email,token])

 }

 model TwoFactorConfirmation{ 
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user User @relation(fields: [userId],references: [id] , onDelete:Cascade)  
  @@unique([userId])
  }

  
  model CompnayDetails{ 
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  isIndependentHire Boolean @default(false)
  description String
  city  String
  industry String
  employees String
  imageUrl String?
  userId String @db.ObjectId
  user User @relation(fields: [userId],references: [id] , onDelete:Cascade)  
  @@unique([userId])
  }